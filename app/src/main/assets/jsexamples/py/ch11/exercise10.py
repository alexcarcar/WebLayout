# Exercise 11-10
def rotate_word(s, n):
	rotated_word = ""
	for c in s:
		if c >= 'A' and c <= 'Z':
			c = rotate_letter(c, 'A', 'Z', n)
		elif c >= 'a' and c <= 'z':
			c = rotate_letter(c, 'a', 'z', n)
 		rotated_word = rotated_word + c
 	return rotated_word

def rotate_letter(char, start, end, n):
	a = ord(start)
	z = ord(end)
	c = ord(char)-a
	len = z-a+1
	if n<0:
		n = len + n;
	shift = (c + n) % len
	c = a + shift
	return chr(c)

print rotate_word("cheer", 7) 		# jolly
print rotate_word("melon", -10) 	# cubed


def make_word_dict():
    """Read the words in words.txt and return a dictionary
    that contains the words as keys"""
    d = dict()
    fin = open('../ch9/words.txt')
    for line in fin:
        word = line.strip().lower()
        d[word] = word
    return d


def rotate_pairs(word, word_dict):
    """Prints all words that can be generated by rotating word.
    word: string
    word_dict: dictionary with words as keys
    """
    n = 0
    for i in range(1, 14):
        rotated = rotate_word(word, i)
        if rotated in word_dict:
            print word, i, rotated
            n += 1
    return n


word_dict = make_word_dict()
n = 0
for word in word_dict:
	n += rotate_pairs(word, word_dict)
	if n > 10:
		break

# jolly
# cubed
# fit 9 orc
# fib 12 run
# fin 6 lot
# size 9 brin
# it 7 pa
# irk 9 rat
# irk 13 vex
# fry 13 sel
# spiv 9 byre
# spit 11 date
# spic 9 byrl